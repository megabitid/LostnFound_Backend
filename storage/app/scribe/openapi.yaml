openapi: 3.0.3
info:
    title: 'Megabit Lost & Found'
    description: 'Lost & Found is an application that user can report when find or lost personal belongings in train stations.'
    version: 1.0.0
servers:
    -
        url: 'https://megabit-lostnfound.herokuapp.com'
paths:
    '/api/v1/web/users/{id}':
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        patch:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        delete:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: recusandae
                required: true
                schema:
                    type: string
    '/api/v1/web/users/{id}/restore':
        patch:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: a
                required: true
                schema:
                    type: string
    /api/v1/web/users:
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 6, nama: 'Sammy Wolf', nip: '4556066534106639', image: 'https://via.placeholder.com/640x480.png/00bb33?text=voluptate', role: 2, stasiun_id: null }, { id: 8, nama: Tono, nip: '124', image: '', role: 1, stasiun_id: null }, { id: 9, nama: Tono, nip: '125', image: '', role: 1, stasiun_id: null }]
                                    links: { first: 'http://localhost/api/v1/web/users?page=1', last: 'http://localhost/api/v1/web/users?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/web/users?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/web/users', per_page: 20, to: 3, total: 3 }
                                properties:
                                    data: { type: array, example: [{ id: 6, nama: 'Sammy Wolf', nip: '4556066534106639', image: 'https://via.placeholder.com/640x480.png/00bb33?text=voluptate', role: 2, stasiun_id: null }, { id: 8, nama: Tono, nip: '124', image: '', role: 1, stasiun_id: null }, { id: 9, nama: Tono, nip: '125', image: '', role: 1, stasiun_id: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/web/users?page=1', last: 'http://localhost/api/v1/web/users?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/web/users?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/web/users', per_page: 20, to: 3, total: 3 } }
            tags:
                - Endpoints
    /api/v1/web/auth/login:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    /api/v1/web/auth/register:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    /api/v1/web/auth/logout:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - Endpoints
            security: []
    /api/v1/web/auth/refresh:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - Endpoints
            security: []
    '/api/v1/android/users/{id}':
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        patch:
            summary: 'Update partially the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: est
                required: true
                schema:
                    type: string
    /api/v1/android/users:
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Pierre Jacobi', email: cebert@gmail.com, email_verified_at: '2020-12-04T15:26:50.000000Z', image: 'https://via.placeholder.com/640x480.png/0011ff?text=rerum' }, { id: 2, nama: 'Ted Johns', email: merlin35@yahoo.com, email_verified_at: '2020-12-04T15:26:50.000000Z', image: 'https://via.placeholder.com/640x480.png/00cc88?text=quisquam' }, { id: 3, nama: 'Carter Sporer', email: jordy.keeling@gmail.com, email_verified_at: '2020-12-04T15:26:51.000000Z', image: 'https://via.placeholder.com/640x480.png/004433?text=quo' }, { id: 4, nama: 'Marlin Gleichner II', email: gorn@yahoo.com, email_verified_at: '2020-12-04T15:26:51.000000Z', image: 'https://via.placeholder.com/640x480.png/0077bb?text=aliquam' }, { id: 5, nama: 'Polly Dickinson', email: noemi.reilly@gmail.com, email_verified_at: '2020-12-04T15:26:52.000000Z', image: 'https://via.placeholder.com/640x480.png/003355?text=ex' }]
                                    links: { first: 'http://localhost/api/v1/android/users?page=1', last: 'http://localhost/api/v1/android/users?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/android/users?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/android/users', per_page: 20, to: 5, total: 5 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Pierre Jacobi', email: cebert@gmail.com, email_verified_at: '2020-12-04T15:26:50.000000Z', image: 'https://via.placeholder.com/640x480.png/0011ff?text=rerum' }, { id: 2, nama: 'Ted Johns', email: merlin35@yahoo.com, email_verified_at: '2020-12-04T15:26:50.000000Z', image: 'https://via.placeholder.com/640x480.png/00cc88?text=quisquam' }, { id: 3, nama: 'Carter Sporer', email: jordy.keeling@gmail.com, email_verified_at: '2020-12-04T15:26:51.000000Z', image: 'https://via.placeholder.com/640x480.png/004433?text=quo' }, { id: 4, nama: 'Marlin Gleichner II', email: gorn@yahoo.com, email_verified_at: '2020-12-04T15:26:51.000000Z', image: 'https://via.placeholder.com/640x480.png/0077bb?text=aliquam' }, { id: 5, nama: 'Polly Dickinson', email: noemi.reilly@gmail.com, email_verified_at: '2020-12-04T15:26:52.000000Z', image: 'https://via.placeholder.com/640x480.png/003355?text=ex' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/android/users?page=1', last: 'http://localhost/api/v1/android/users?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/android/users?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/android/users', per_page: 20, to: 5, total: 5 } }
            tags:
                - Endpoints
    /api/v1/android/auth/login:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    /api/v1/android/auth/register:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    /api/v1/android/auth/logout:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - Endpoints
            security: []
    /api/v1/android/auth/refresh:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - Endpoints
            security: []
    /api/v1/android/auth/oauth2/google/authorize:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                400:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: "Client error: `POST https://www.googleapis.com/oauth2/v4/token` resulted in a `400 Bad Request` response:\n{\n  \"error\": \"invalid_request\",\n  \"error_description\": \"Missing required parameter: code\"\n}\n"
                                    exception: GuzzleHttp\Exception\ClientException
                                    trace: [{ file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\Middleware.php', line: 69, function: create, class: GuzzleHttp\Exception\RequestException, type: '::', args: [{  }, {  }, null, [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 204, function: 'GuzzleHttp\{closure}', class: GuzzleHttp\Middleware, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 153, function: callHandler, class: GuzzleHttp\Promise\Promise, type: '::', args: [1, {  }, null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\TaskQueue.php', line: 48, function: 'GuzzleHttp\Promise\{closure}', class: GuzzleHttp\Promise\Promise, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 248, function: run, class: GuzzleHttp\Promise\TaskQueue, type: '->', args: [true] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 224, function: invokeWaitFn, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 269, function: waitIfPending, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 226, function: invokeWaitList, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 62, function: waitIfPending, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\Client.php', line: 187, function: wait, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\ClientTrait.php', line: 95, function: request, class: GuzzleHttp\Client, type: '->', args: [POST, 'https://www.googleapis.com/oauth2/v4/token', { headers: { Accept: application/json }, form_params: { grant_type: authorization_code, client_id: 304092645592-42g8iugfoohtdgq3jqgio9h67ojb7vhh.apps.googleusercontent.com, client_secret: noXkPSo7ZalqZoMeYJXgvnmt, code: null, redirect_uri: 'http://localhost:8000/api/v1/android/auth/oauth2/google/authorize' }, synchronous: true }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\socialite\src\Two\AbstractProvider.php', line: 273, function: post, class: GuzzleHttp\Client, type: '->', args: ['https://www.googleapis.com/oauth2/v4/token', { headers: { Accept: application/json }, form_params: { grant_type: authorization_code, client_id: 304092645592-42g8iugfoohtdgq3jqgio9h67ojb7vhh.apps.googleusercontent.com, client_secret: noXkPSo7ZalqZoMeYJXgvnmt, code: null, redirect_uri: 'http://localhost:8000/api/v1/android/auth/oauth2/google/authorize' } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\app\Http\Controllers\v1\Android\Oauth2Controller.php', line: 30, function: getAccessTokenResponse, class: Laravel\Socialite\Two\AbstractProvider, type: '->', args: [null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Controller.php', line: 54, function: handleGoogleCallback, class: App\Http\Controllers\v1\Android\Oauth2Controller, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php', line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->', args: [handleGoogleCallback, [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 254, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, {  }, handleGoogleCallback] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 197, function: runController, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 692, function: run, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php', line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, [{ key: e7cf66797159dc3cd3e85f72e15bb551, maxAttempts: 60, decayMinutes: 1, responseCallback: null }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, api, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, api] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 694, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 669, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 635, function: runRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 624, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [responses, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [[{  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 610, function: call, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->', args: [[{  }, handle]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Command\Command.php', line: 255, function: execute, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->', args: [{  }, {  }] }]
                                properties:
                                    message: { type: string, example: "Client error: `POST https://www.googleapis.com/oauth2/v4/token` resulted in a `400 Bad Request` response:\n{\n  \"error\": \"invalid_request\",\n  \"error_description\": \"Missing required parameter: code\"\n}\n" }
                                    exception: { type: string, example: GuzzleHttp\Exception\ClientException }
                                    trace: { type: array, example: [{ file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\Middleware.php', line: 69, function: create, class: GuzzleHttp\Exception\RequestException, type: '::', args: [{  }, {  }, null, [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 204, function: 'GuzzleHttp\{closure}', class: GuzzleHttp\Middleware, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 153, function: callHandler, class: GuzzleHttp\Promise\Promise, type: '::', args: [1, {  }, null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\TaskQueue.php', line: 48, function: 'GuzzleHttp\Promise\{closure}', class: GuzzleHttp\Promise\Promise, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 248, function: run, class: GuzzleHttp\Promise\TaskQueue, type: '->', args: [true] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 224, function: invokeWaitFn, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 269, function: waitIfPending, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 226, function: invokeWaitList, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 62, function: waitIfPending, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\Client.php', line: 187, function: wait, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\ClientTrait.php', line: 95, function: request, class: GuzzleHttp\Client, type: '->', args: [POST, 'https://www.googleapis.com/oauth2/v4/token', { headers: { Accept: application/json }, form_params: { grant_type: authorization_code, client_id: 304092645592-42g8iugfoohtdgq3jqgio9h67ojb7vhh.apps.googleusercontent.com, client_secret: noXkPSo7ZalqZoMeYJXgvnmt, code: null, redirect_uri: 'http://localhost:8000/api/v1/android/auth/oauth2/google/authorize' }, synchronous: true }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\socialite\src\Two\AbstractProvider.php', line: 273, function: post, class: GuzzleHttp\Client, type: '->', args: ['https://www.googleapis.com/oauth2/v4/token', { headers: { Accept: application/json }, form_params: { grant_type: authorization_code, client_id: 304092645592-42g8iugfoohtdgq3jqgio9h67ojb7vhh.apps.googleusercontent.com, client_secret: noXkPSo7ZalqZoMeYJXgvnmt, code: null, redirect_uri: 'http://localhost:8000/api/v1/android/auth/oauth2/google/authorize' } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\app\Http\Controllers\v1\Android\Oauth2Controller.php', line: 30, function: getAccessTokenResponse, class: Laravel\Socialite\Two\AbstractProvider, type: '->', args: [null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Controller.php', line: 54, function: handleGoogleCallback, class: App\Http\Controllers\v1\Android\Oauth2Controller, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php', line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->', args: [handleGoogleCallback, [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 254, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, {  }, handleGoogleCallback] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 197, function: runController, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 692, function: run, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php', line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, [{ key: e7cf66797159dc3cd3e85f72e15bb551, maxAttempts: 60, decayMinutes: 1, responseCallback: null }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, api, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, api] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 694, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 669, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 635, function: runRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 624, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [responses, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: d7770fbdcc266a6e29f94b49f98f9dcd, methods: [GET], uri: api/v1/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v1/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ uri: api/v1/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v1\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v1/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [[{  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 610, function: call, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->', args: [[{  }, handle]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Command\Command.php', line: 255, function: execute, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->', args: [{  }, {  }] }], items: { type: object } }
            tags:
                - Endpoints
    '/api/v1/stasiun/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: et
                required: true
                schema:
                    type: string
    /api/v1/stasiun:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Bobbie Haley V' }, { id: 2, nama: 'Filiberto Predovic' }, { id: 3, nama: 'Delia Pollich Jr.' }, { id: 4, nama: 'Lou Gutmann' }, { id: 5, nama: 'Taurean Davis I' }]
                                    links: { first: 'http://localhost/api/v1/stasiun?page=1', last: 'http://localhost/api/v1/stasiun?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/stasiun?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/stasiun', per_page: 20, to: 5, total: 5 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Bobbie Haley V' }, { id: 2, nama: 'Filiberto Predovic' }, { id: 3, nama: 'Delia Pollich Jr.' }, { id: 4, nama: 'Lou Gutmann' }, { id: 5, nama: 'Taurean Davis I' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/stasiun?page=1', last: 'http://localhost/api/v1/stasiun?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/stasiun?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/stasiun', per_page: 20, to: 5, total: 5 } }
            tags:
                - Endpoints
    '/api/v1/barang-kategori/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: expedita
                required: true
                schema:
                    type: string
    /api/v1/barang-kategori:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Desmond Hilpert' }, { id: 2, nama: 'Eryn Stark' }, { id: 3, nama: 'Mr. Toby Fadel' }, { id: 4, nama: 'Willie Muller' }, { id: 5, nama: 'Veda Botsford' }]
                                    links: { first: 'http://localhost/api/v1/barang-kategori?page=1', last: 'http://localhost/api/v1/barang-kategori?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/barang-kategori?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/barang-kategori', per_page: 20, to: 5, total: 5 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Desmond Hilpert' }, { id: 2, nama: 'Eryn Stark' }, { id: 3, nama: 'Mr. Toby Fadel' }, { id: 4, nama: 'Willie Muller' }, { id: 5, nama: 'Veda Botsford' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/barang-kategori?page=1', last: 'http://localhost/api/v1/barang-kategori?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/barang-kategori?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/barang-kategori', per_page: 20, to: 5, total: 5 } }
            tags:
                - Endpoints
    '/api/v1/barang-images/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        patch:
            summary: 'Update partially the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: impedit
                required: true
                schema:
                    type: string
    /api/v1/barang-images:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Alexane Muller', uri: 'https://via.placeholder.com/640x480.png/00ffcc?text=perspiciatis', barang_id: 5 }, { id: 2, nama: 'Jayce Romaguera', uri: 'https://via.placeholder.com/640x480.png/00aa22?text=sunt', barang_id: 4 }, { id: 3, nama: 'Dwight Murphy', uri: 'https://via.placeholder.com/640x480.png/00aa33?text=animi', barang_id: 3 }, { id: 5, nama: 'Mr. Cristina Gerlach', uri: 'https://via.placeholder.com/640x480.png/00bb99?text=repellendus', barang_id: 4 }]
                                    links: { first: 'http://localhost/api/v1/barang-images?page=1', last: 'http://localhost/api/v1/barang-images?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/barang-images?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/barang-images', per_page: 20, to: 4, total: 4 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Alexane Muller', uri: 'https://via.placeholder.com/640x480.png/00ffcc?text=perspiciatis', barang_id: 5 }, { id: 2, nama: 'Jayce Romaguera', uri: 'https://via.placeholder.com/640x480.png/00aa22?text=sunt', barang_id: 4 }, { id: 3, nama: 'Dwight Murphy', uri: 'https://via.placeholder.com/640x480.png/00aa33?text=animi', barang_id: 3 }, { id: 5, nama: 'Mr. Cristina Gerlach', uri: 'https://via.placeholder.com/640x480.png/00bb99?text=repellendus', barang_id: 4 }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/barang-images?page=1', last: 'http://localhost/api/v1/barang-images?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/barang-images?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/barang-images', per_page: 20, to: 4, total: 4 } }
            tags:
                - Endpoints
    '/api/v1/barang-status/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: doloribus
                required: true
                schema:
                    type: string
    /api/v1/barang-status:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: hilang }, { id: 2, nama: ditemukan }, { id: 3, nama: didonasikan }, { id: 4, nama: diklaim }]
                                    links: { first: 'http://localhost/api/v1/barang-status?page=1', last: 'http://localhost/api/v1/barang-status?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/barang-status?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/barang-status', per_page: 20, to: 4, total: 4 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: hilang }, { id: 2, nama: ditemukan }, { id: 3, nama: didonasikan }, { id: 4, nama: diklaim }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/barang-status?page=1', last: 'http://localhost/api/v1/barang-status?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/barang-status?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/barang-status', per_page: 20, to: 4, total: 4 } }
            tags:
                - Endpoints
    /api/v1/histories:
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, user_id: 6, barang_id: null, status: ditemukan, created_at: '2020-12-06T02:09:03.000000Z', updated_at: '2020-12-06T02:09:03.000000Z' }, { id: 2, user_id: 6, barang_id: null, status: ditemukan, created_at: '2020-12-06T02:17:13.000000Z', updated_at: '2020-12-06T02:17:13.000000Z' }, { id: 3, user_id: 6, barang_id: null, status: hilang, created_at: '2020-12-06T02:24:08.000000Z', updated_at: '2020-12-06T02:24:08.000000Z' }]
                                    links: { first: 'http://localhost/api/v1/histories?page=1', last: 'http://localhost/api/v1/histories?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/histories?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/histories', per_page: 20, to: 3, total: 3 }
                                properties:
                                    data: { type: array, example: [{ id: 1, user_id: 6, barang_id: null, status: ditemukan, created_at: '2020-12-06T02:09:03.000000Z', updated_at: '2020-12-06T02:09:03.000000Z' }, { id: 2, user_id: 6, barang_id: null, status: ditemukan, created_at: '2020-12-06T02:17:13.000000Z', updated_at: '2020-12-06T02:17:13.000000Z' }, { id: 3, user_id: 6, barang_id: null, status: hilang, created_at: '2020-12-06T02:24:08.000000Z', updated_at: '2020-12-06T02:24:08.000000Z' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/histories?page=1', last: 'http://localhost/api/v1/histories?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/histories?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/histories', per_page: 20, to: 3, total: 3 } }
            tags:
                - Endpoints
    '/api/v1/claims/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        patch:
            summary: 'Update partially the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: quidem
                required: true
                schema:
                    type: string
    '/api/v1/claims/{id}/verified':
        put:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: dolor
                required: true
                schema:
                    type: string
    /api/v1/claims:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 3, alamat: wkwkw, no_telp: '08', uri_tiket: '', verified: 0, created_at: '2020-12-09T08:05:27.000000Z', updated_at: '2020-12-09T08:05:27.000000Z', user_id: 1, barang_id: 3, barang: { id: 3, nama_barang: 'Clair Rowe Updated Partially' } }, { id: 4, alamat: wkwkw, no_telp: '08', uri_tiket: '', verified: 0, created_at: '2020-12-09T08:05:39.000000Z', updated_at: '2020-12-09T08:05:39.000000Z', user_id: 1, barang_id: 3, barang: { id: 3, nama_barang: 'Clair Rowe Updated Partially' } }, { id: 5, alamat: wkwkw, no_telp: '08', uri_tiket: '', verified: 0, created_at: '2020-12-09T08:05:41.000000Z', updated_at: '2020-12-09T08:05:41.000000Z', user_id: 1, barang_id: 3, barang: { id: 3, nama_barang: 'Clair Rowe Updated Partially' } }, { id: 6, alamat: wkwkw, no_telp: '08', uri_tiket: '', verified: 0, created_at: '2020-12-09T08:05:43.000000Z', updated_at: '2020-12-09T08:05:43.000000Z', user_id: 1, barang_id: 3, barang: { id: 3, nama_barang: 'Clair Rowe Updated Partially' } }]
                                    links: { first: 'http://localhost/api/v1/claims?page=1', last: 'http://localhost/api/v1/claims?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/claims?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/claims', per_page: 20, to: 4, total: 4 }
                                properties:
                                    data: { type: array, example: [{ id: 3, alamat: wkwkw, no_telp: '08', uri_tiket: '', verified: 0, created_at: '2020-12-09T08:05:27.000000Z', updated_at: '2020-12-09T08:05:27.000000Z', user_id: 1, barang_id: 3, barang: { id: 3, nama_barang: 'Clair Rowe Updated Partially' } }, { id: 4, alamat: wkwkw, no_telp: '08', uri_tiket: '', verified: 0, created_at: '2020-12-09T08:05:39.000000Z', updated_at: '2020-12-09T08:05:39.000000Z', user_id: 1, barang_id: 3, barang: { id: 3, nama_barang: 'Clair Rowe Updated Partially' } }, { id: 5, alamat: wkwkw, no_telp: '08', uri_tiket: '', verified: 0, created_at: '2020-12-09T08:05:41.000000Z', updated_at: '2020-12-09T08:05:41.000000Z', user_id: 1, barang_id: 3, barang: { id: 3, nama_barang: 'Clair Rowe Updated Partially' } }, { id: 6, alamat: wkwkw, no_telp: '08', uri_tiket: '', verified: 0, created_at: '2020-12-09T08:05:43.000000Z', updated_at: '2020-12-09T08:05:43.000000Z', user_id: 1, barang_id: 3, barang: { id: 3, nama_barang: 'Clair Rowe Updated Partially' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/claims?page=1', last: 'http://localhost/api/v1/claims?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/claims?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/claims', per_page: 20, to: 4, total: 4 } }
            tags:
                - Endpoints
    '/api/v2/web/users/{id}':
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        delete:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        patch:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: commodi
                required: true
                schema:
                    type: string
    '/api/v2/web/users/{id}/restore':
        patch:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: sint
                required: true
                schema:
                    type: string
    /api/v2/web/users:
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 6, nama: 'Sammy Wolf', nip: '4556066534106639', image: 'https://via.placeholder.com/640x480.png/00bb33?text=voluptate', role: 2, stasiun_id: null }, { id: 8, nama: Tono, nip: '124', image: '', role: 1, stasiun_id: null }, { id: 9, nama: Tono, nip: '125', image: '', role: 1, stasiun_id: null }]
                                    links: { first: 'http://localhost/api/v2/web/users?page=1', last: 'http://localhost/api/v2/web/users?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/web/users?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/web/users', per_page: 20, to: 3, total: 3 }
                                properties:
                                    data: { type: array, example: [{ id: 6, nama: 'Sammy Wolf', nip: '4556066534106639', image: 'https://via.placeholder.com/640x480.png/00bb33?text=voluptate', role: 2, stasiun_id: null }, { id: 8, nama: Tono, nip: '124', image: '', role: 1, stasiun_id: null }, { id: 9, nama: Tono, nip: '125', image: '', role: 1, stasiun_id: null }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v2/web/users?page=1', last: 'http://localhost/api/v2/web/users?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/web/users?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/web/users', per_page: 20, to: 3, total: 3 } }
            tags:
                - Endpoints
    /api/v2/web/auth/login:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    /api/v2/web/auth/register:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    /api/v2/web/auth/logout:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - Endpoints
            security: []
    /api/v2/web/auth/refresh:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - Endpoints
            security: []
    '/api/v2/android/users/{id}':
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        patch:
            summary: 'Update partially the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: sed
                required: true
                schema:
                    type: string
    /api/v2/android/users:
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Pierre Jacobi', email: cebert@gmail.com, email_verified_at: '2020-12-04T15:26:50.000000Z', image: 'https://via.placeholder.com/640x480.png/0011ff?text=rerum' }, { id: 2, nama: 'Ted Johns', email: merlin35@yahoo.com, email_verified_at: '2020-12-04T15:26:50.000000Z', image: 'https://via.placeholder.com/640x480.png/00cc88?text=quisquam' }, { id: 3, nama: 'Carter Sporer', email: jordy.keeling@gmail.com, email_verified_at: '2020-12-04T15:26:51.000000Z', image: 'https://via.placeholder.com/640x480.png/004433?text=quo' }, { id: 4, nama: 'Marlin Gleichner II', email: gorn@yahoo.com, email_verified_at: '2020-12-04T15:26:51.000000Z', image: 'https://via.placeholder.com/640x480.png/0077bb?text=aliquam' }, { id: 5, nama: 'Polly Dickinson', email: noemi.reilly@gmail.com, email_verified_at: '2020-12-04T15:26:52.000000Z', image: 'https://via.placeholder.com/640x480.png/003355?text=ex' }]
                                    links: { first: 'http://localhost/api/v2/android/users?page=1', last: 'http://localhost/api/v2/android/users?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/android/users?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/android/users', per_page: 20, to: 5, total: 5 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Pierre Jacobi', email: cebert@gmail.com, email_verified_at: '2020-12-04T15:26:50.000000Z', image: 'https://via.placeholder.com/640x480.png/0011ff?text=rerum' }, { id: 2, nama: 'Ted Johns', email: merlin35@yahoo.com, email_verified_at: '2020-12-04T15:26:50.000000Z', image: 'https://via.placeholder.com/640x480.png/00cc88?text=quisquam' }, { id: 3, nama: 'Carter Sporer', email: jordy.keeling@gmail.com, email_verified_at: '2020-12-04T15:26:51.000000Z', image: 'https://via.placeholder.com/640x480.png/004433?text=quo' }, { id: 4, nama: 'Marlin Gleichner II', email: gorn@yahoo.com, email_verified_at: '2020-12-04T15:26:51.000000Z', image: 'https://via.placeholder.com/640x480.png/0077bb?text=aliquam' }, { id: 5, nama: 'Polly Dickinson', email: noemi.reilly@gmail.com, email_verified_at: '2020-12-04T15:26:52.000000Z', image: 'https://via.placeholder.com/640x480.png/003355?text=ex' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v2/android/users?page=1', last: 'http://localhost/api/v2/android/users?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/android/users?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/android/users', per_page: 20, to: 5, total: 5 } }
            tags:
                - Endpoints
    /api/v2/android/auth/login:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    /api/v2/android/auth/register:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    /api/v2/android/auth/logout:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - Endpoints
            security: []
    /api/v2/android/auth/refresh:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - Endpoints
            security: []
    '/api/v2/android/auth/verify/{token}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Wrong number of segments'
                                properties:
                                    message: { type: string, example: 'Wrong number of segments' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: token
                description: ''
                example: corrupti
                required: true
                schema:
                    type: string
    /api/v2/android/auth/reset-password:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
    '/api/v2/android/auth/reset-password/{token}':
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n<style>\r\nbody {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  background-color: black;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Add padding to containers */\r\n.container {\r\n  padding: 16px;\r\n  background-color: white;\r\n}\r\n\r\n/* Full-width input fields */\r\ninput[type=text], input[type=password] {\r\n  width: 100%;\r\n  padding: 15px;\r\n  margin: 5px 0 22px 0;\r\n  display: inline-block;\r\n  border: none;\r\n  background: #f1f1f1;\r\n}\r\n\r\ninput[type=text]:focus, input[type=password]:focus {\r\n  background-color: #ddd;\r\n  outline: none;\r\n}\r\n\r\n/* Overwrite default styles of hr */\r\nhr {\r\n  border: 1px solid #f1f1f1;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n/* Set a style for the submit button */\r\n.registerbtn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 16px 20px;\r\n  margin: 8px 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  opacity: 0.9;\r\n}\r\n\r\n.registerbtn:hover {\r\n  opacity: 1;\r\n}\r\n\r\n</style>\r\n</head>\r\n<body>\r\n\r\n<div>\r\n  <div class=\"container\">\r\n    <h1>Reset Password</h1>\r\n    <p>Please fill in this form to reset your password.</p>\r\n    <hr>\r\n\r\n    <input type=\"password\" placeholder=\"New Password\" name=\"psw\" id=\"psw\" required>\r\n\r\n    <button onclick=\"resetPassword()\" class=\"registerbtn\">Reset Password</button>\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n    function getPath(){\r\n        return window.location.href\r\n    }\r\n    function jsonRequest(method, URI, payload, oncomplete) {\r\n        let xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = oncomplete;\r\n        xhttp.open(method, URI, true)\r\n        xhttp.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\r\n        if (payload) {\r\n            xhttp.send(payload);\r\n            return;\r\n        }\r\n        xhttp.send()\r\n    }\r\n    function resetPassword() {\r\n        let newPassword = document.getElementById(\"psw\").value.trim();\r\n        jsonRequest('POST', getPath(), JSON.stringify({\"password\": newPassword}), function() {\r\n            if (this.readyState == 4) {\r\n                document.write(this.responseText);\r\n            }\r\n        });\r\n    }\r\n</script>\r\n\r\n</body>\r\n</html>"
            tags:
                - Endpoints
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: token
                description: ''
                example: placeat
                required: true
                schema:
                    type: string
    /api/v2/android/auth/oauth2/google/authorize:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                400:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: "Client error: `POST https://www.googleapis.com/oauth2/v4/token` resulted in a `400 Bad Request` response:\n{\n  \"error\": \"invalid_request\",\n  \"error_description\": \"Missing required parameter: code\"\n}\n"
                                    exception: GuzzleHttp\Exception\ClientException
                                    trace: [{ file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\Middleware.php', line: 69, function: create, class: GuzzleHttp\Exception\RequestException, type: '::', args: [{  }, {  }, null, [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 204, function: 'GuzzleHttp\{closure}', class: GuzzleHttp\Middleware, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 153, function: callHandler, class: GuzzleHttp\Promise\Promise, type: '::', args: [1, {  }, null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\TaskQueue.php', line: 48, function: 'GuzzleHttp\Promise\{closure}', class: GuzzleHttp\Promise\Promise, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 248, function: run, class: GuzzleHttp\Promise\TaskQueue, type: '->', args: [true] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 224, function: invokeWaitFn, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 269, function: waitIfPending, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 226, function: invokeWaitList, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 62, function: waitIfPending, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\Client.php', line: 187, function: wait, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\ClientTrait.php', line: 95, function: request, class: GuzzleHttp\Client, type: '->', args: [POST, 'https://www.googleapis.com/oauth2/v4/token', { headers: { Accept: application/json }, form_params: { grant_type: authorization_code, client_id: 304092645592-42g8iugfoohtdgq3jqgio9h67ojb7vhh.apps.googleusercontent.com, client_secret: noXkPSo7ZalqZoMeYJXgvnmt, code: null, redirect_uri: 'http://localhost:8000/api/v1/android/auth/oauth2/google/authorize' }, synchronous: true }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\socialite\src\Two\AbstractProvider.php', line: 273, function: post, class: GuzzleHttp\Client, type: '->', args: ['https://www.googleapis.com/oauth2/v4/token', { headers: { Accept: application/json }, form_params: { grant_type: authorization_code, client_id: 304092645592-42g8iugfoohtdgq3jqgio9h67ojb7vhh.apps.googleusercontent.com, client_secret: noXkPSo7ZalqZoMeYJXgvnmt, code: null, redirect_uri: 'http://localhost:8000/api/v1/android/auth/oauth2/google/authorize' } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\app\Http\Controllers\v2\Android\Oauth2Controller.php', line: 30, function: getAccessTokenResponse, class: Laravel\Socialite\Two\AbstractProvider, type: '->', args: [null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Controller.php', line: 54, function: handleGoogleCallback, class: App\Http\Controllers\v2\Android\Oauth2Controller, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php', line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->', args: [handleGoogleCallback, [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 254, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, {  }, handleGoogleCallback] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 197, function: runController, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 692, function: run, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php', line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, [{ key: e7cf66797159dc3cd3e85f72e15bb551, maxAttempts: 60, decayMinutes: 1, responseCallback: null }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, api, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, api] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 694, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 669, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 635, function: runRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 624, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { name: App\Http\Controllers\v2\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v2\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [responses, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { name: App\Http\Controllers\v2\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v2\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ name: App\Http\Controllers\v2\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v2\Android\Oauth2Controller }, { uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [[{  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 610, function: call, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->', args: [[{  }, handle]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Command\Command.php', line: 255, function: execute, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->', args: [{  }, {  }] }]
                                properties:
                                    message: { type: string, example: "Client error: `POST https://www.googleapis.com/oauth2/v4/token` resulted in a `400 Bad Request` response:\n{\n  \"error\": \"invalid_request\",\n  \"error_description\": \"Missing required parameter: code\"\n}\n" }
                                    exception: { type: string, example: GuzzleHttp\Exception\ClientException }
                                    trace: { type: array, example: [{ file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\Middleware.php', line: 69, function: create, class: GuzzleHttp\Exception\RequestException, type: '::', args: [{  }, {  }, null, [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 204, function: 'GuzzleHttp\{closure}', class: GuzzleHttp\Middleware, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 153, function: callHandler, class: GuzzleHttp\Promise\Promise, type: '::', args: [1, {  }, null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\TaskQueue.php', line: 48, function: 'GuzzleHttp\Promise\{closure}', class: GuzzleHttp\Promise\Promise, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 248, function: run, class: GuzzleHttp\Promise\TaskQueue, type: '->', args: [true] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 224, function: invokeWaitFn, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 269, function: waitIfPending, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 226, function: invokeWaitList, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\promises\src\Promise.php', line: 62, function: waitIfPending, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\Client.php', line: 187, function: wait, class: GuzzleHttp\Promise\Promise, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\guzzlehttp\guzzle\src\ClientTrait.php', line: 95, function: request, class: GuzzleHttp\Client, type: '->', args: [POST, 'https://www.googleapis.com/oauth2/v4/token', { headers: { Accept: application/json }, form_params: { grant_type: authorization_code, client_id: 304092645592-42g8iugfoohtdgq3jqgio9h67ojb7vhh.apps.googleusercontent.com, client_secret: noXkPSo7ZalqZoMeYJXgvnmt, code: null, redirect_uri: 'http://localhost:8000/api/v1/android/auth/oauth2/google/authorize' }, synchronous: true }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\socialite\src\Two\AbstractProvider.php', line: 273, function: post, class: GuzzleHttp\Client, type: '->', args: ['https://www.googleapis.com/oauth2/v4/token', { headers: { Accept: application/json }, form_params: { grant_type: authorization_code, client_id: 304092645592-42g8iugfoohtdgq3jqgio9h67ojb7vhh.apps.googleusercontent.com, client_secret: noXkPSo7ZalqZoMeYJXgvnmt, code: null, redirect_uri: 'http://localhost:8000/api/v1/android/auth/oauth2/google/authorize' } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\app\Http\Controllers\v2\Android\Oauth2Controller.php', line: 30, function: getAccessTokenResponse, class: Laravel\Socialite\Two\AbstractProvider, type: '->', args: [null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Controller.php', line: 54, function: handleGoogleCallback, class: App\Http\Controllers\v2\Android\Oauth2Controller, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php', line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->', args: [handleGoogleCallback, [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 254, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, {  }, handleGoogleCallback] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 197, function: runController, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 692, function: run, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php', line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 127, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 103, function: handleRequest, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, [{ key: e7cf66797159dc3cd3e85f72e15bb551, maxAttempts: 60, decayMinutes: 1, responseCallback: null }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php', line: 55, function: handleRequestUsingNamedLimiter, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, api, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\ThrottleRequests, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, api] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 694, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 669, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 635, function: runRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 624, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { name: App\Http\Controllers\v2\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v2\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [responses, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { name: App\Http\Controllers\v2\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v2\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ name: App\Http\Controllers\v2\Android\Oauth2Controller }, { name: handleGoogleCallback, class: App\Http\Controllers\v2\Android\Oauth2Controller }, { uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: e38843f623d783f09dfd2d44a19441ad, methods: [GET], uri: api/v2/android/auth/oauth2/google/authorize, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: api/v2/android/auth/oauth2/google/authorize, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ uri: api/v2/android/auth/oauth2/google/authorize, methods: [GET, HEAD], action: { middleware: [api], uses: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, controller: App\Http\Controllers\v2\Android\Oauth2Controller@handleGoogleCallback, namespace: null, prefix: api/v2/android/auth, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [api], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [[{  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 610, function: call, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->', args: [[{  }, handle]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Command\Command.php', line: 255, function: execute, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->', args: [{  }, {  }] }], items: { type: object } }
            tags:
                - Endpoints
    '/api/v2/barang/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        patch:
            summary: 'Update partially the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: fuga
                required: true
                schema:
                    type: string
    /api/v2/barang:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 3, nama_barang: 'Clair Rowe Updated Partially', tanggal: '2020-12-04', lokasi: "67934 Juvenal Place\nJeffport, OR 75023-4991", warna: Salmon, merek: Heaney-Hansen, user_id: 5, status_id: 4, kategori_id: 3, stasiun: { id: 4, nama: 'Lou Gutmann' } }, { id: 4, nama_barang: 'Howell Herman', tanggal: '2020-12-04', lokasi: "86652 Kovacek Lane Suite 799\nZiemehaven, NM 82483-6929", warna: CadetBlue, merek: Beier-Green, user_id: 1, status_id: 1, kategori_id: 2, stasiun: { id: 5, nama: 'Taurean Davis I' } }, { id: 5, nama_barang: 'Jacques Dietrich DVM', tanggal: '2020-12-04', lokasi: "63070 Christiansen Viaduct\nMargarettachester, MT 82331-1192", warna: PapayaWhip, merek: Orn-Herman, user_id: 6, status_id: 4, kategori_id: 2, stasiun: { id: 3, nama: 'Delia Pollich Jr.' } }]
                                    links: { first: 'http://localhost/api/v2/barang?page=1', last: 'http://localhost/api/v2/barang?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/barang?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/barang', per_page: 20, to: 3, total: 3 }
                                properties:
                                    data: { type: array, example: [{ id: 3, nama_barang: 'Clair Rowe Updated Partially', tanggal: '2020-12-04', lokasi: "67934 Juvenal Place\nJeffport, OR 75023-4991", warna: Salmon, merek: Heaney-Hansen, user_id: 5, status_id: 4, kategori_id: 3, stasiun: { id: 4, nama: 'Lou Gutmann' } }, { id: 4, nama_barang: 'Howell Herman', tanggal: '2020-12-04', lokasi: "86652 Kovacek Lane Suite 799\nZiemehaven, NM 82483-6929", warna: CadetBlue, merek: Beier-Green, user_id: 1, status_id: 1, kategori_id: 2, stasiun: { id: 5, nama: 'Taurean Davis I' } }, { id: 5, nama_barang: 'Jacques Dietrich DVM', tanggal: '2020-12-04', lokasi: "63070 Christiansen Viaduct\nMargarettachester, MT 82331-1192", warna: PapayaWhip, merek: Orn-Herman, user_id: 6, status_id: 4, kategori_id: 2, stasiun: { id: 3, nama: 'Delia Pollich Jr.' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v2/barang?page=1', last: 'http://localhost/api/v2/barang?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/barang?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/barang', per_page: 20, to: 3, total: 3 } }
            tags:
                - Endpoints
    '/api/v2/stasiun/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: quibusdam
                required: true
                schema:
                    type: string
    /api/v2/stasiun:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Bobbie Haley V' }, { id: 2, nama: 'Filiberto Predovic' }, { id: 3, nama: 'Delia Pollich Jr.' }, { id: 4, nama: 'Lou Gutmann' }, { id: 5, nama: 'Taurean Davis I' }]
                                    links: { first: 'http://localhost/api/v2/stasiun?page=1', last: 'http://localhost/api/v2/stasiun?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/stasiun?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/stasiun', per_page: 20, to: 5, total: 5 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Bobbie Haley V' }, { id: 2, nama: 'Filiberto Predovic' }, { id: 3, nama: 'Delia Pollich Jr.' }, { id: 4, nama: 'Lou Gutmann' }, { id: 5, nama: 'Taurean Davis I' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v2/stasiun?page=1', last: 'http://localhost/api/v2/stasiun?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/stasiun?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/stasiun', per_page: 20, to: 5, total: 5 } }
            tags:
                - Endpoints
    '/api/v2/barang-kategori/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: eius
                required: true
                schema:
                    type: string
    /api/v2/barang-kategori:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Desmond Hilpert' }, { id: 2, nama: 'Eryn Stark' }, { id: 3, nama: 'Mr. Toby Fadel' }, { id: 4, nama: 'Willie Muller' }, { id: 5, nama: 'Veda Botsford' }]
                                    links: { first: 'http://localhost/api/v2/barang-kategori?page=1', last: 'http://localhost/api/v2/barang-kategori?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/barang-kategori?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/barang-kategori', per_page: 20, to: 5, total: 5 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Desmond Hilpert' }, { id: 2, nama: 'Eryn Stark' }, { id: 3, nama: 'Mr. Toby Fadel' }, { id: 4, nama: 'Willie Muller' }, { id: 5, nama: 'Veda Botsford' }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v2/barang-kategori?page=1', last: 'http://localhost/api/v2/barang-kategori?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/barang-kategori?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/barang-kategori', per_page: 20, to: 5, total: 5 } }
            tags:
                - Endpoints
    '/api/v2/barang-images/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        patch:
            summary: 'Update partially the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: omnis
                required: true
                schema:
                    type: string
    /api/v2/barang-images:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: 'Alexane Muller', uri: 'https://via.placeholder.com/640x480.png/00ffcc?text=perspiciatis', barang_id: 5 }, { id: 2, nama: 'Jayce Romaguera', uri: 'https://via.placeholder.com/640x480.png/00aa22?text=sunt', barang_id: 4 }, { id: 3, nama: 'Dwight Murphy', uri: 'https://via.placeholder.com/640x480.png/00aa33?text=animi', barang_id: 3 }, { id: 5, nama: 'Mr. Cristina Gerlach', uri: 'https://via.placeholder.com/640x480.png/00bb99?text=repellendus', barang_id: 4 }]
                                    links: { first: 'http://localhost/api/v2/barang-images?page=1', last: 'http://localhost/api/v2/barang-images?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/barang-images?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/barang-images', per_page: 20, to: 4, total: 4 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: 'Alexane Muller', uri: 'https://via.placeholder.com/640x480.png/00ffcc?text=perspiciatis', barang_id: 5 }, { id: 2, nama: 'Jayce Romaguera', uri: 'https://via.placeholder.com/640x480.png/00aa22?text=sunt', barang_id: 4 }, { id: 3, nama: 'Dwight Murphy', uri: 'https://via.placeholder.com/640x480.png/00aa33?text=animi', barang_id: 3 }, { id: 5, nama: 'Mr. Cristina Gerlach', uri: 'https://via.placeholder.com/640x480.png/00bb99?text=repellendus', barang_id: 4 }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v2/barang-images?page=1', last: 'http://localhost/api/v2/barang-images?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/barang-images?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/barang-images', per_page: 20, to: 4, total: 4 } }
            tags:
                - Endpoints
    '/api/v2/barang-status/{id}':
        delete:
            summary: 'Remove the specified resource from storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        put:
            summary: 'Update the specified resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display the specified resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - Endpoints
        parameters:
            -
                in: path
                name: id
                description: ''
                example: et
                required: true
                schema:
                    type: string
    /api/v2/barang-status:
        post:
            summary: 'Store a newly created resource in storage.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
        get:
            summary: 'Display a listing of the resource.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 1, nama: hilang }, { id: 2, nama: ditemukan }, { id: 3, nama: didonasikan }, { id: 4, nama: diklaim }]
                                    links: { first: 'http://localhost/api/v2/barang-status?page=1', last: 'http://localhost/api/v2/barang-status?page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/barang-status?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/barang-status', per_page: 20, to: 4, total: 4 }
                                properties:
                                    data: { type: array, example: [{ id: 1, nama: hilang }, { id: 2, nama: ditemukan }, { id: 3, nama: didonasikan }, { id: 4, nama: diklaim }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v2/barang-status?page=1', last: 'http://localhost/api/v2/barang-status?page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v2/barang-status?page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v2/barang-status', per_page: 20, to: 4, total: 4 } }
            tags:
                - Endpoints
    /auth/oauth2/google:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                500:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Session store not set on request.'
                                    class: RuntimeException
                                    trace: [{ file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\socialite\src\Two\AbstractProvider.php', line: 158, function: session, class: Illuminate\Http\Request, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\app\Http\Controllers\v1\Android\Oauth2Controller.php', line: 23, function: redirect, class: Laravel\Socialite\Two\AbstractProvider, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Controller.php', line: 54, function: redirectToGoogle, class: App\Http\Controllers\v1\Android\Oauth2Controller, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php', line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->', args: [redirectToGoogle, []] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 254, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, {  }, redirectToGoogle] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 197, function: runController, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 692, function: run, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php', line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\VerifyCsrfToken.php', line: 77, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\VerifyCsrfToken, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\View\Middleware\ShareErrorsFromSession.php', line: 49, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\View\Middleware\ShareErrorsFromSession, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php', line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php', line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\EncryptCookies.php', line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 694, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 669, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 635, function: runRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 624, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: redirectToGoogle, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [responses, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: redirectToGoogle, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: redirectToGoogle, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [[{  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 610, function: call, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->', args: [[{  }, handle]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Command\Command.php', line: 255, function: execute, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->', args: [{  }, {  }] }]
                                properties:
                                    message: { type: string, example: 'Session store not set on request.' }
                                    class: { type: string, example: RuntimeException }
                                    trace: { type: array, example: [{ file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\socialite\src\Two\AbstractProvider.php', line: 158, function: session, class: Illuminate\Http\Request, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\app\Http\Controllers\v1\Android\Oauth2Controller.php', line: 23, function: redirect, class: Laravel\Socialite\Two\AbstractProvider, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Controller.php', line: 54, function: redirectToGoogle, class: App\Http\Controllers\v1\Android\Oauth2Controller, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php', line: 45, function: callAction, class: Illuminate\Routing\Controller, type: '->', args: [redirectToGoogle, []] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 254, function: dispatch, class: Illuminate\Routing\ControllerDispatcher, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, {  }, redirectToGoogle] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Route.php', line: 197, function: runController, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 692, function: run, class: Illuminate\Routing\Route, type: '->', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Routing\{closure}', class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php', line: 41, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Routing\Middleware\SubstituteBindings, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\VerifyCsrfToken.php', line: 77, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\VerifyCsrfToken, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\View\Middleware\ShareErrorsFromSession.php', line: 49, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\View\Middleware\ShareErrorsFromSession, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php', line: 121, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Session\Middleware\StartSession.php', line: 63, function: handleStatefulRequest, class: Illuminate\Session\Middleware\StartSession, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Session\Middleware\StartSession, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Cookie\Middleware\EncryptCookies.php', line: 67, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Cookie\Middleware\EncryptCookies, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 694, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 669, function: runRouteWithinStack, class: Illuminate\Routing\Router, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 635, function: runRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Routing\Router.php', line: 624, function: dispatchToRoute, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 166, function: dispatch, class: Illuminate\Routing\Router, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 128, function: 'Illuminate\Foundation\Http\{closure}', class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php', line: 21, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\TransformsRequest, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php', line: 27, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\ValidatePostSize, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php', line: 87, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fruitcake\laravel-cors\src\HandleCors.php', line: 37, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fruitcake\Cors\HandleCors, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\fideloper\proxy\src\TrustProxies.php', line: 57, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 167, function: handle, class: Fideloper\Proxy\TrustProxies, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php', line: 103, function: 'Illuminate\Pipeline\{closure}', class: Illuminate\Pipeline\Pipeline, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 141, function: then, class: Illuminate\Pipeline\Pipeline, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php', line: 110, function: sendRequestThroughRouter, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 324, function: handle, class: Illuminate\Foundation\Http\Kernel, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 305, function: callLaravelOrLumenRoute, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 76, function: makeApiCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ attributes: {  }, request: {  }, query: {  }, server: {  }, files: {  }, cookies: {  }, headers: {  } }, { uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 51, function: makeResponseCall, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php', line: 41, function: makeResponseCallIfEnabledAndNoSuccessResponses, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 236, function: __invoke, class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: redirectToGoogle, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 172, function: iterateThroughStrategies, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [responses, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [], responses: [] }, [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: redirectToGoogle, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Extracting\Generator.php', line: 127, function: fetchResponses, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ name: App\Http\Controllers\v1\Android\Oauth2Controller }, { name: redirectToGoogle, class: App\Http\Controllers\v1\Android\Oauth2Controller }, { uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }, { id: b01e20f5a473dbc3c22bccd59c6da22d, methods: [GET], uri: auth/oauth2/google, metadata: { groupName: Endpoints, groupDescription: '', title: '', description: '', authenticated: true }, urlParameters: [], cleanUrlParameters: [], boundUri: auth/oauth2/google, auth: 'headers.Authorization.Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC92MVwvYW5kcm9pZFwvYXV0aFwvbG9naW4iLCJpYXQiOjE2MDc2MDY3ODcsImV4cCI6MTYxMDE5ODc4NywibmJmIjoxNjA3NjA2Nzg3LCJqdGkiOiJtME45NGtocDI0T2VGMXNDIiwic3ViIjo2LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.ej0YJMNMf3-z9apdeaOFjBN30m7jdkh7gjqn3bQLl40', headers: { Authorization: 'Bearer {YOUR_AUTH_KEY}', Content-Type: application/json, Accept: application/json }, queryParameters: [], cleanQueryParameters: [], bodyParameters: [], cleanBodyParameters: [], fileParameters: [] }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 119, function: processRoute, class: Knuckles\Scribe\Extracting\Generator, type: '->', args: [{ uri: auth/oauth2/google, methods: [GET, HEAD], action: { middleware: [web], uses: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, controller: App\Http\Controllers\v1\Android\Oauth2Controller@redirectToGoogle, namespace: null, prefix: null, where: [] }, isFallback: false, controller: {  }, defaults: [], wheres: [], parameters: [], parameterNames: [], computedMiddleware: [web], compiled: {  } }, { headers: { Content-Type: application/json, Accept: application/json }, response_calls: { methods: [GET], config: { app.env: documentation }, queryParams: [], bodyParams: [], fileParams: [], cookies: [] } }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php', line: 73, function: processRoutes, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [[{  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }, {  }]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 36, function: handle, class: Knuckles\Scribe\Commands\GenerateDocumentation, type: '->', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Util.php', line: 40, function: 'Illuminate\Container\{closure}', class: Illuminate\Container\BoundMethod, type: '::', args: [] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 93, function: unwrapIfClosure, class: Illuminate\Container\Util, type: '::', args: [{  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php', line: 37, function: callBoundMethod, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Container\Container.php', line: 610, function: call, class: Illuminate\Container\BoundMethod, type: '::', args: [{ contextual: [] }, [{  }, handle], [], null] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 136, function: call, class: Illuminate\Container\Container, type: '->', args: [[{  }, handle]] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Command\Command.php', line: 255, function: execute, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Command.php', line: 121, function: run, class: Symfony\Component\Console\Command\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 971, function: run, class: Illuminate\Console\Command, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 290, function: doRunCommand, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\symfony\console\Application.php', line: 166, function: doRun, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Console\Application.php', line: 93, function: run, class: Symfony\Component\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php', line: 129, function: run, class: Illuminate\Console\Application, type: '->', args: [{  }, {  }] }, { file: 'D:\Megabit\LostnFound_Backend\lost_n_found\artisan', line: 37, function: handle, class: Illuminate\Foundation\Console\Kernel, type: '->', args: [{  }, {  }] }], items: { type: object } }
            tags:
                - Endpoints
    '/api/v1/barang/{id}':
        delete:
            summary: 'Delete Barang.'
            description: 'Will delete barang and all of its images.'
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                204:
                    description: '204, delete success'
                401:
                    description: '401, Unauthorized'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
                403:
                    description: '403, not owner or admin'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'You must be the owner or admin to do this.'
                                properties:
                                    message: { type: string, example: 'You must be the owner or admin to do this.' }
                404:
                    description: '404, barang not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - 'v1 - Barang'
        put:
            summary: 'Update Barang.'
            description: 'Will update barang.'
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                201:
                    description: '201, update success'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 3
                                    nama_barang: 'Clair Rowe Updated'
                                    tanggal: '2020-12-04'
                                    lokasi: "67934 Juvenal Place\nJeffport, OR 75023-4991"
                                    deskripsi: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.'
                                    warna: Salmon
                                    merek: Heaney-Hansen
                                    user_id: 5
                                    status_id: 4
                                    stasiun_id: 4
                                    kategori_id: 3
                                    created_at: null
                                    updated_at: '2020-12-10T15:25:46.000000Z'
                                properties:
                                    id: { type: integer, example: 3 }
                                    nama_barang: { type: string, example: 'Clair Rowe Updated' }
                                    tanggal: { type: string, example: '2020-12-04' }
                                    lokasi: { type: string, example: "67934 Juvenal Place\nJeffport, OR 75023-4991" }
                                    deskripsi: { type: string, example: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.' }
                                    warna: { type: string, example: Salmon }
                                    merek: { type: string, example: Heaney-Hansen }
                                    user_id: { type: integer, example: 5 }
                                    status_id: { type: integer, example: 4 }
                                    stasiun_id: { type: integer, example: 4 }
                                    kategori_id: { type: integer, example: 3 }
                                    created_at: { type: string, example: null }
                                    updated_at: { type: string, example: '2020-12-10T15:25:46.000000Z' }
                400:
                    description: '400, bad request'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Validation Error'
                                    errors: { nama_barang: ['The nama barang field is required.'], lokasi: ['The lokasi field is required.'], deskripsi: ['The deskripsi field is required.'], warna: ['The warna field is required.'], merek: ['The merek field is required.'], user_id: ['The user id field is required.'], stasiun_id: ['The stasiun id field is required.'], status_id: ['The status id field is required.'], kategori_id: ['The kategori id field is required.'] }
                                properties:
                                    message: { type: string, example: 'Validation Error' }
                                    errors: { type: object, example: { nama_barang: ['The nama barang field is required.'], lokasi: ['The lokasi field is required.'], deskripsi: ['The deskripsi field is required.'], warna: ['The warna field is required.'], merek: ['The merek field is required.'], user_id: ['The user id field is required.'], stasiun_id: ['The stasiun id field is required.'], status_id: ['The status id field is required.'], kategori_id: ['The kategori id field is required.'] } }
                401:
                    description: '401, Unauthorized'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
                403:
                    description: '403, not owner or admin'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'You must be the owner or admin to do this.'
                                properties:
                                    message: { type: string, example: 'You must be the owner or admin to do this.' }
                404:
                    description: '404, barang not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - 'v1 - Barang'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_barang:
                                    type: string
                                    description: 'Nama barang.'
                                    example: 'Clair Rowe Updated Partially'
                                tanggal:
                                    type: 'date_format:Y-m-d'
                                    description: 'Tanggal pendataan.'
                                    example: '2020-12-04'
                                lokasi:
                                    type: string
                                    description: 'Lokasi detail barang.'
                                    example: '67934 Juvenal Place\nJeffport, OR 75023-4991'
                                deskripsi:
                                    type: string
                                    description: 'Deskripsi barang.'
                                    example: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.'
                                warna:
                                    type: string
                                    description: 'Warna barang.'
                                    example: Salmon
                                merek:
                                    type: string
                                    description: 'Merek barang.'
                                    example: Heaney-Hansen
                                user_id:
                                    type: integer
                                    description: 'id User yang terkait barang.'
                                    example: 5
                                status_id:
                                    type: integer
                                    description: 'id Status barang.'
                                    example: 4
                                stasiun_id:
                                    type: integer
                                    description: 'id Stasiun barang.'
                                    example: 4
                                kategori_id:
                                    type: integer
                                    description: 'id Kategori barang.'
                                    example: 3
                            required:
                                - nama_barang
                                - tanggal
                                - lokasi
                                - deskripsi
                                - warna
                                - merek
                                - user_id
                                - status_id
                                - stasiun_id
                                - kategori_id
        patch:
            summary: 'Partial Update Barang.'
            description: 'Will update barang partially.'
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                201:
                    description: '201, update success'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 3
                                    nama_barang: 'Clair Rowe Updated Partially'
                                    tanggal: '2020-12-04'
                                    lokasi: "67934 Juvenal Place\nJeffport, OR 75023-4991"
                                    deskripsi: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.'
                                    warna: Salmon
                                    merek: Heaney-Hansen
                                    user_id: 5
                                    status_id: 4
                                    stasiun_id: 4
                                    kategori_id: 3
                                    created_at: null
                                    updated_at: '2020-12-10T15:25:46.000000Z'
                                properties:
                                    id: { type: integer, example: 3 }
                                    nama_barang: { type: string, example: 'Clair Rowe Updated Partially' }
                                    tanggal: { type: string, example: '2020-12-04' }
                                    lokasi: { type: string, example: "67934 Juvenal Place\nJeffport, OR 75023-4991" }
                                    deskripsi: { type: string, example: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.' }
                                    warna: { type: string, example: Salmon }
                                    merek: { type: string, example: Heaney-Hansen }
                                    user_id: { type: integer, example: 5 }
                                    status_id: { type: integer, example: 4 }
                                    stasiun_id: { type: integer, example: 4 }
                                    kategori_id: { type: integer, example: 3 }
                                    created_at: { type: string, example: null }
                                    updated_at: { type: string, example: '2020-12-10T15:25:46.000000Z' }
                400:
                    description: '400, bad request'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Validation Error'
                                    errors: { nama_barang: ['The nama barang must be a string.'], lokasi: ['The lokasi must be a string.'], deskripsi: ['The deskripsi must be a string.'], warna: ['The warna must be a string.'], merek: ['The merek must be a string.'], user_id: ['The user id must be a number.'], stasiun_id: ['The stasiun id must be a number.'], status_id: ['The status id must be a number.'], kategori_id: ['The kategori id must be a number.'] }
                                properties:
                                    message: { type: string, example: 'Validation Error' }
                                    errors: { type: object, example: { nama_barang: ['The nama barang must be a string.'], lokasi: ['The lokasi must be a string.'], deskripsi: ['The deskripsi must be a string.'], warna: ['The warna must be a string.'], merek: ['The merek must be a string.'], user_id: ['The user id must be a number.'], stasiun_id: ['The stasiun id must be a number.'], status_id: ['The status id must be a number.'], kategori_id: ['The kategori id must be a number.'] } }
                401:
                    description: '401, Unauthorized'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
                403:
                    description: '403, not owner or admin'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'You must be the owner or admin to do this.'
                                properties:
                                    message: { type: string, example: 'You must be the owner or admin to do this.' }
                404:
                    description: '404, barang not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - 'v1 - Barang'
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_barang:
                                    type: string
                                    description: 'Nama barang.'
                                    example: 'Clair Rowe Updated Partially'
                                tanggal:
                                    type: 'date_format:Y-m-d'
                                    description: 'Tanggal pendataan.'
                                    example: null
                                lokasi:
                                    type: string
                                    description: 'Lokasi detail barang.'
                                    example: null
                                deskripsi:
                                    type: string
                                    description: 'Deskripsi barang.'
                                    example: null
                                warna:
                                    type: string
                                    description: 'Warna barang.'
                                    example: null
                                merek:
                                    type: string
                                    description: 'Merek barang.'
                                    example: null
                                user_id:
                                    type: integer
                                    description: 'id User yang terkait barang.'
                                    example: null
                                status_id:
                                    type: integer
                                    description: 'id Status barang.'
                                    example: null
                                stasiun_id:
                                    type: integer
                                    description: 'id Stasiun barang.'
                                    example: null
                                kategori_id:
                                    type: integer
                                    description: 'id Kategori barang.'
                                    example: null
        get:
            summary: 'Get Detail Barang.'
            description: ''
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 3
                                    nama_barang: 'Clair Rowe Updated Partially'
                                    tanggal: '2020-12-04'
                                    lokasi: "67934 Juvenal Place\nJeffport, OR 75023-4991"
                                    deskripsi: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.'
                                    warna: Salmon
                                    merek: Heaney-Hansen
                                    user_id: 5
                                    status_id: 4
                                    created_at: null
                                    updated_at: '2020-12-10T15:28:18.000000Z'
                                    stasiun: { id: 4, nama: 'Lou Gutmann' }
                                    kategori: { id: 3, nama: 'Mr. Toby Fadel' }
                                properties:
                                    id: { type: integer, example: 3 }
                                    nama_barang: { type: string, example: 'Clair Rowe Updated Partially' }
                                    tanggal: { type: string, example: '2020-12-04' }
                                    lokasi: { type: string, example: "67934 Juvenal Place\nJeffport, OR 75023-4991" }
                                    deskripsi: { type: string, example: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.' }
                                    warna: { type: string, example: Salmon }
                                    merek: { type: string, example: Heaney-Hansen }
                                    user_id: { type: integer, example: 5 }
                                    status_id: { type: integer, example: 4 }
                                    created_at: { type: string, example: null }
                                    updated_at: { type: string, example: '2020-12-10T15:28:18.000000Z' }
                                    stasiun: { type: object, example: { id: 4, nama: 'Lou Gutmann' } }
                                    kategori: { type: object, example: { id: 3, nama: 'Mr. Toby Fadel' } }
                401:
                    description: '401, Unauthorized'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
                404:
                    description: '404, barang not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Not Found'
                                properties:
                                    message: { type: string, example: 'Not Found' }
            tags:
                - 'v1 - Barang'
        parameters:
            -
                in: path
                name: id
                description: 'The id of barang.'
                example: 1
                required: true
                schema:
                    type: integer
    /api/v1/barang:
        post:
            summary: 'Add Barang.'
            description: 'Add barang with their status and its related field.'
            parameters:
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                201:
                    description: '201, update success'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 3
                                    nama_barang: 'Clair Rowe'
                                    tanggal: '2020-12-04'
                                    lokasi: "67934 Juvenal Place\nJeffport, OR 75023-4991"
                                    deskripsi: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.'
                                    warna: Salmon
                                    merek: Heaney-Hansen
                                    user_id: 5
                                    status_id: 4
                                    stasiun_id: 4
                                    kategori_id: 3
                                    created_at: '2020-12-10T15:25:46.000000Z'
                                    updated_at: null
                                properties:
                                    id: { type: integer, example: 3 }
                                    nama_barang: { type: string, example: 'Clair Rowe' }
                                    tanggal: { type: string, example: '2020-12-04' }
                                    lokasi: { type: string, example: "67934 Juvenal Place\nJeffport, OR 75023-4991" }
                                    deskripsi: { type: string, example: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.' }
                                    warna: { type: string, example: Salmon }
                                    merek: { type: string, example: Heaney-Hansen }
                                    user_id: { type: integer, example: 5 }
                                    status_id: { type: integer, example: 4 }
                                    stasiun_id: { type: integer, example: 4 }
                                    kategori_id: { type: integer, example: 3 }
                                    created_at: { type: string, example: '2020-12-10T15:25:46.000000Z' }
                                    updated_at: { type: string, example: null }
                400:
                    description: '400, bad request'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Validation Error'
                                    errors: { nama_barang: ['The nama barang field is required.'], lokasi: ['The lokasi field is required.'], deskripsi: ['The deskripsi field is required.'], warna: ['The warna field is required.'], merek: ['The merek field is required.'], user_id: ['The user id field is required.'], stasiun_id: ['The stasiun id field is required.'], status_id: ['The status id field is required.'], kategori_id: ['The kategori id field is required.'] }
                                properties:
                                    message: { type: string, example: 'Validation Error' }
                                    errors: { type: object, example: { nama_barang: ['The nama barang field is required.'], lokasi: ['The lokasi field is required.'], deskripsi: ['The deskripsi field is required.'], warna: ['The warna field is required.'], merek: ['The merek field is required.'], user_id: ['The user id field is required.'], stasiun_id: ['The stasiun id field is required.'], status_id: ['The status id field is required.'], kategori_id: ['The kategori id field is required.'] } }
                401:
                    description: '401, Unauthorized'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
            tags:
                - 'v1 - Barang'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nama_barang:
                                    type: string
                                    description: 'Nama barang.'
                                    example: 'Clair Rowe'
                                tanggal:
                                    type: 'date_format:Y-m-d'
                                    description: 'Tanggal pendataan.'
                                    example: '2020-12-04'
                                lokasi:
                                    type: string
                                    description: 'Lokasi detail barang.'
                                    example: '67934 Juvenal Place\nJeffport, OR 75023-4991'
                                deskripsi:
                                    type: string
                                    description: 'Deskripsi barang.'
                                    example: 'Fuga molestiae minus ullam reprehenderit. Sunt accusantium nam qui esse qui optio. Dolorum qui qui aut ut voluptatum fuga et. Rem vitae similique eius sed.'
                                warna:
                                    type: string
                                    description: 'Warna barang.'
                                    example: Salmon
                                merek:
                                    type: string
                                    description: 'Merek barang.'
                                    example: Heaney-Hansen
                                user_id:
                                    type: integer
                                    description: 'id User yang terkait barang.'
                                    example: 5
                                status_id:
                                    type: integer
                                    description: 'id Status barang.'
                                    example: 4
                                stasiun_id:
                                    type: integer
                                    description: 'id Stasiun barang.'
                                    example: 4
                                kategori_id:
                                    type: integer
                                    description: 'id Kategori barang.'
                                    example: 3
                            required:
                                - nama_barang
                                - tanggal
                                - lokasi
                                - deskripsi
                                - warna
                                - merek
                                - user_id
                                - status_id
                                - stasiun_id
                                - kategori_id
        get:
            summary: 'Get List Barang.'
            description: "### Barang parameter query supported:\n* id\n* user_id\n* stasiun_id\n* status_id\n* kategori_id\n\n### orderBy query supported fields:\n* All field of barang detail\n\n### search query will search string inside theese fields:\n* nama_barang\n* lokasi\n* tanggl\n* deskrpi\n* warna\n* merek\n\n<aside class=\"warning\"> We still use limit offset pagination. In future will be replaced with cursor based pagination.</aside>"
            parameters:
                -
                    in: query
                    name: id
                    description: 'Apply filter with id.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'Apply filter with id.'
                        example: null
                -
                    in: query
                    name: user_id
                    description: 'Apply filter with user_id.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'Apply filter with user_id.'
                        example: null
                -
                    in: query
                    name: stasiun_id
                    description: 'Apply filter with stasiun_id.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'Apply filter with stasiun_id.'
                        example: null
                -
                    in: query
                    name: status_id
                    description: 'Apply filter with status_id.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'Apply filter with status_id.'
                        example: null
                -
                    in: query
                    name: kategori_id
                    description: 'Apply filter with kategori_id.'
                    example: null
                    required: false
                    schema:
                        type: integer
                        description: 'Apply filter with kategori_id.'
                        example: null
                -
                    in: query
                    name: orderBy
                    description: ''
                    example: '-id'
                    required: false
                    schema:
                        type: string
                        description: ''
                        example: '-id'
                -
                    in: query
                    name: search
                    description: 'Apply filtering with string search.'
                    example: '2020'
                    required: false
                    schema:
                        type: string
                        description: 'Apply filtering with string search.'
                        example: '2020'
                -
                    in: header
                    name: Authorization
                    description: ''
                    example: 'Bearer {YOUR_AUTH_KEY}'
                    schema:
                        type: string
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: '401, Unauthorized'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Token not provided'
                                properties:
                                    message: { type: string, example: 'Token not provided' }
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    data: [{ id: 5, nama_barang: 'Jacques Dietrich DVM', tanggal: '2020-12-04', lokasi: "63070 Christiansen Viaduct\nMargarettachester, MT 82331-1192", warna: PapayaWhip, merek: Orn-Herman, user_id: 6, status_id: 4, kategori_id: 2, stasiun: { id: 3, nama: 'Delia Pollich Jr.' } }, { id: 4, nama_barang: 'Howell Herman', tanggal: '2020-12-04', lokasi: "86652 Kovacek Lane Suite 799\nZiemehaven, NM 82483-6929", warna: CadetBlue, merek: Beier-Green, user_id: 1, status_id: 1, kategori_id: 2, stasiun: { id: 5, nama: 'Taurean Davis I' } }, { id: 3, nama_barang: 'Clair Rowe Updated Partially', tanggal: '2020-12-04', lokasi: "67934 Juvenal Place\nJeffport, OR 75023-4991", warna: Salmon, merek: Heaney-Hansen, user_id: 5, status_id: 4, kategori_id: 3, stasiun: { id: 4, nama: 'Lou Gutmann' } }]
                                    links: { first: 'http://localhost/api/v1/barang?orderBy=-id&search=2020&page=1', last: 'http://localhost/api/v1/barang?orderBy=-id&search=2020&page=1', prev: null, next: null }
                                    meta: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/barang?orderBy=-id&search=2020&page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/barang', per_page: 20, to: 3, total: 3 }
                                properties:
                                    data: { type: array, example: [{ id: 5, nama_barang: 'Jacques Dietrich DVM', tanggal: '2020-12-04', lokasi: "63070 Christiansen Viaduct\nMargarettachester, MT 82331-1192", warna: PapayaWhip, merek: Orn-Herman, user_id: 6, status_id: 4, kategori_id: 2, stasiun: { id: 3, nama: 'Delia Pollich Jr.' } }, { id: 4, nama_barang: 'Howell Herman', tanggal: '2020-12-04', lokasi: "86652 Kovacek Lane Suite 799\nZiemehaven, NM 82483-6929", warna: CadetBlue, merek: Beier-Green, user_id: 1, status_id: 1, kategori_id: 2, stasiun: { id: 5, nama: 'Taurean Davis I' } }, { id: 3, nama_barang: 'Clair Rowe Updated Partially', tanggal: '2020-12-04', lokasi: "67934 Juvenal Place\nJeffport, OR 75023-4991", warna: Salmon, merek: Heaney-Hansen, user_id: 5, status_id: 4, kategori_id: 3, stasiun: { id: 4, nama: 'Lou Gutmann' } }], items: { type: object } }
                                    links: { type: object, example: { first: 'http://localhost/api/v1/barang?orderBy=-id&search=2020&page=1', last: 'http://localhost/api/v1/barang?orderBy=-id&search=2020&page=1', prev: null, next: null } }
                                    meta: { type: object, example: { current_page: 1, from: 1, last_page: 1, links: [{ url: null, label: '&laquo; Previous', active: false }, { url: 'http://localhost/api/v1/barang?orderBy=-id&search=2020&page=1', label: 1, active: true }, { url: null, label: 'Next &raquo;', active: false }], path: 'http://localhost/api/v1/barang', per_page: 20, to: 3, total: 3 } }
            tags:
                - 'v1 - Barang'
components:
    securitySchemes:
        default:
            type: http
            scheme: bearer
            description: ''
security:
    -
        default: []
